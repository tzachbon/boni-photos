{"version":3,"file":"mail.util.js","sourceRoot":"","sources":["../../../../src/util/mail.util.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,yCAA6C;AAM7C;IAWE,gBAAY,OAAgB,EAAE,IAAa,EAAE,EAAW;QARvC,SAAI,GAAG;YACtB,IAAI,EAAE,yBAAyB;YAC/B,IAAI,EAAE,YAAY;SACnB,CAAA;QAMC,IAAI,OAAO,EAAE;YACX,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;SAC7B;QACD,IAAI,IAAI,EAAE;YACR,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;SACvB;QACD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACpC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;IAC9C,CAAC;IAED,sBAAI,4BAAQ;aAAZ;YACE,OAAO;gBACL,OAAO,EAAE,IAAI,CAAC,OAAO;gBACrB,IAAI,EAAE,IAAI,CAAC,IAAI;aAChB,CAAC;QACJ,CAAC;;;OAAA;IAEO,iCAAgB,GAAxB;QACE,OAAO,4BAAe,CAAC;YACrB,IAAI,EAAE,gBAAgB;YACtB,IAAI,EAAE,GAAG;YACT,MAAM,EAAE,IAAI;YACZ,IAAI,EAAE,IAAI,CAAC,IAAI;SAChB,CAAC,CAAC;IACL,CAAC;IAEO,gCAAe,GAAvB,UAAwB,KAAc;QACpC,IAAM,EAAE,GAAG,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;QACnC,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,aAAa,EAAE,CAAC;QACrD,IAAM,IAAI,GAAG,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC;QAC5C,OAAO;YACL,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI;YACpB,EAAE,IAAA;YACF,OAAO,SAAA;YACP,IAAI,MAAA;SACL,CAAC;IACJ,CAAC;IAED,8BAAa,GAAb,UAAc,OAA2B;QAA3B,wBAAA,EAAA,2BAA2B;QACvC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IAED,2BAAU,GAAV,UAAW,IAAkB;QAAlB,qBAAA,EAAA,kBAAkB;QAC3B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IAEK,qBAAI,GAAV;;;;gBACE,WAAO,IAAI,OAAO,CAAC,UAAC,GAAG,EAAE,GAAG;wBAC1B,KAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,WAAW,EAAE,UAAC,GAAG,EAAE,IAAI;4BAC7C,IAAI,GAAG,EAAE;gCACP,GAAG,CAAC,GAAG,CAAC,CAAC;6BACV;4BACD,IAAI,IAAI,EAAE;gCACR,GAAG,CAAC,IAAI,CAAC,CAAC;6BACX;wBACH,CAAC,CAAC,CAAC;oBACL,CAAC,CAAC,EAAC;;;KACJ;IACH,aAAC;AAAD,CAAC,AAxED,IAwEC;AAxEY,wBAAM","sourcesContent":["import { createTransport } from 'nodemailer';\nimport { MailOptions } from 'nodemailer/lib/smtp-transport';\nimport Mail from 'nodemailer/lib/mailer';\n\n\n\nexport class Mailer {\n  private mail: Mail;\n  private mailOptions: MailOptions;\n  private readonly auth = {\n    user: 'BoniPhotosInc@gmail.com',\n    pass: 'boni123456'\n  }\n  private subject: string;\n  private text: string;\n\n\n  constructor(subject?: string, text?: string, to?: string) {\n    if (subject) {\n      this.setNewSubject(subject);\n    }\n    if (text) {\n      this.setNewText(text);\n    }\n    this.mail = this.initMailMetaData();\n    this.mailOptions = this.initMailOptions(to);\n  }\n\n  get mailInfo() {\n    return {\n      subject: this.subject,\n      text: this.text\n    };\n  }\n\n  private initMailMetaData() {\n    return createTransport({\n      host: 'smtp.gmail.com',\n      port: 465,\n      secure: true, // use SSL\n      auth: this.auth\n    });\n  }\n\n  private initMailOptions(toWho?: string) {\n    const to = toWho || this.auth.user;\n    const subject = this.subject || this.setNewSubject();\n    const text = this.text || this.setNewText();\n    return {\n      from: this.auth.user,\n      to,\n      subject,\n      text\n    };\n  }\n\n  setNewSubject(subject = 'nodemailer test') {\n    this.subject = subject;\n    return this.subject;\n  }\n\n  setNewText(text = 'node text') {\n    this.text = text;\n    return this.text;\n  }\n\n  async send() {\n    return new Promise((res, rej) => {\n      this.mail.sendMail(this.mailOptions, (err, info) => {\n        if (err) {\n          rej(err);\n        }\n        if (info) {\n          res(info);\n        }\n      });\n    });\n  }\n}\n"]}