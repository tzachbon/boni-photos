{"version":3,"file":"counter.util.js","sourceRoot":"","sources":["../../src/util/counter.util.ts"],"names":[],"mappings":"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","sourcesContent":["import cron from 'node-cron';\nimport { environment } from '../environment';\nimport { Mailer } from './mail.util';\nimport request = require('request-promise');\nimport moment = require('moment')\nexport class Counter {\n\n\n  constructor() {\n    this.initCron();\n  }\n\n  initCron() {\n    cron.schedule('25 5 10 * * *', this.sendMailEveryDay.bind(this));\n    cron.schedule('0 0 12 * * FRI', this.sendMailEveryWeek.bind(this));\n  }\n\n  async sendMailEveryWeek() {\n    const userData = await this.getUsersData();\n    const userDetails = {\n      numberOfUsers: Object.keys(userData).filter((user, i, arr) => arr.indexOf(user) === i).length,\n      entersPerUser: this.getEntersPerUser(userData),\n      avgPerUser: this.getAvgTime(userData)\n    };\n\n    const text = JSON.stringify(userDetails);\n    const mail = new Mailer('פירוט שבועי', text);\n    await mail.send();\n  }\n\n  async sendMailEveryDay() {\n    const userData = await this.getUsersData();\n    const userDetails = {\n      numberOfUsers: Object.keys(userData).filter((user, i, arr) => arr.indexOf(user) === i).length,\n      entersPerUser: this.getEntersPerUser(userData),\n      avgPerUser: this.getAvgTime(userData)\n    };\n\n    const text = JSON.stringify(userDetails);\n    const mail = new Mailer('פירוט יומי', text);\n    await mail.send();\n\n  }\n\n  getEntersPerUser(data: any) {\n    const newObject = {};\n    Object.entries(data).forEach(([key, value]) => {\n      if (!!value && typeof value === 'object') {\n        Object.assign(newObject, { [key]: Object.keys(value).length });\n      }\n    });\n\n    return newObject;\n  }\n\n  getAvgTime(data) {\n    const newObject = {};\n    Object.entries(data).forEach(([key, value]) => {\n      if (!!value && typeof value === 'object') {\n\n        let total = 0;\n        const valuesArray = Object.values(value);\n\n        valuesArray.map(({ date }) => new Date(date)).forEach(date => {\n          if (!!date && moment(date).isValid()) {\n            total += +moment(date).hour();\n          }\n        });\n        Object.assign(newObject, { [key]: (total / valuesArray.length) });\n      }\n    });\n\n    return newObject;\n  }\n\n\n\n  async getUsersData() {\n    return request(`${environment.BASE_URL}/users.json`).then(data => JSON.parse(data));\n  }\n\n}\n"]}